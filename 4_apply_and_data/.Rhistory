sd_x <- sd
# Write your code here if you choose to answer the question above
# use extra cells if needed
data = matrix(1:50, ncol=5)
colnames(data) = c("variable_1", "variable_2", "variable_3", "variable_4", "variable_5")
data
# Write your code here
# use extra cells if needed
#HAVE YOU LOADED MY LIBRARY ABOVE. PLEASE MAKE SURE YOU DO.
data_tbl <- as_tibble(data)
Q2 <- apply(data_tbl, MARGIN = 2, sd_x)
Q2
# Write your code here
# use extra cells if needed
#I am a coral nerd so I added a few of my favorite species
coral_pop = c("Montipora capitata",
"Porites compressa",
"Porites lobata",
"Pavona duerdeni",
"Porites monticulosa",
"Porites evermanni")
#I also, as a nerd, wanted to give some semi-reasonable probabilities thinking about Kealakekua
coral <- sample(coral_pop, 100, replace = TRUE, prob = c(0.30, 0.2, 0.2, 0.05, 0.05, 0.2))
#Making the other one!!
disease = c(T,F)
is_diseased <- sample(disease, 100, replace = TRUE, prob = c(0.2, 0.8))
#make it a tibble! Not a data frame so that we can keep the column names
coral_health_tbl <- tibble(coral, is_diseased)
head(coral_health_tbl)
# Write your code here
# use extra cells if needed
rnorm(5, 10, 1)
#can you explain why I cannot use rnorm(n=5, mu=10, sd=1) without getting an error?
# Write your code here
# use extra cells if ne
#I started by making sure my probabilities worked perfectly
table(coral_health_tbl$is_diseased)
#then I used the rnorm function as directed
for_false <- rnorm(80,9,2)
for_true <- rnorm(20, 1, 3)
#i made these together into a vector
coral_cover <- c(for_false, for_true)
#sorted the tibble
sorted_coral_health_tbl <- arrange(coral_health_tbl, binary_health_status)
#binded the column I made to the table in the correct order
coral_health_tbl <- cbind(sorted_coral_health_tbl, coral_cover)
binary_health_status <- as.integer(is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
head(coral_health_tbl)
# Write you library imports here. E.g.:
library(tidyverse)
# ...
# Write your code here
# use extra cells if needed
sd_x <- sd
# Write your code here if you choose to answer the question above
# use extra cells if needed
data = matrix(1:50, ncol=5)
colnames(data) = c("variable_1", "variable_2", "variable_3", "variable_4", "variable_5")
data
# Write your code here
# use extra cells if needed
#HAVE YOU LOADED MY LIBRARY ABOVE. PLEASE MAKE SURE YOU DO.
data_tbl <- as_tibble(data)
Q2 <- apply(data_tbl, MARGIN = 2, sd_x)
Q2
# Write your code here
# use extra cells if needed
#I am a coral nerd so I added a few of my favorite species
coral_pop = c("Montipora capitata",
"Porites compressa",
"Porites lobata",
"Pavona duerdeni",
"Porites monticulosa",
"Porites evermanni")
#I also, as a nerd, wanted to give some semi-reasonable probabilities thinking about Kealakekua
coral <- sample(coral_pop, 100, replace = TRUE, prob = c(0.30, 0.2, 0.2, 0.05, 0.05, 0.2))
#Making the other one!!
disease = c(T,F)
is_diseased <- sample(disease, 100, replace = TRUE, prob = c(0.2, 0.8))
#make it a tibble! Not a data frame so that we can keep the column names
coral_health_tbl <- tibble(coral, is_diseased)
head(coral_health_tbl)
# Write your code here
# use extra cells if needed
rnorm(5, 10, 1)
#can you explain why I cannot use rnorm(n=5, mu=10, sd=1) without getting an error?
# Write your code here
# use extra cells if ne
#I started by making sure my probabilities worked perfectly
table(coral_health_tbl$is_diseased)
#then I used the rnorm function as directed
for_false <- rnorm(80,9,2)
for_true <- rnorm(20, 1, 3)
#i made these together into a vector
coral_cover <- c(for_false, for_true)
#sorted the tibble
sorted_coral_health_tbl <- arrange(coral_health_tbl, binary_health_status)
#binded the column I made to the table in the correct order
coral_health_tbl <- cbind(sorted_coral_health_tbl, coral_cover)
head(coral_health_tbl)
binary_health_status <- as.integer(is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
is_diseased
as.integer(is_diseased)
binary_health_status <- as.integer(is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
# Write your code here
# use extra cells if needed
#I am a coral nerd so I added a few of my favorite species
coral_pop = c("Montipora capitata",
"Porites compressa",
"Porites lobata",
"Pavona duerdeni",
"Porites monticulosa",
"Porites evermanni")
#I also, as a nerd, wanted to give some semi-reasonable probabilities thinking about Kealakekua
coral <- sample(coral_pop, 100, replace = TRUE, prob = c(0.30, 0.2, 0.2, 0.05, 0.05, 0.2))
#Making the other one!!
disease = c(T,F)
is_diseased <- sample(disease, 100, replace = TRUE, prob = c(0.2, 0.8))
#make it a tibble! Not a data frame so that we can keep the column names
coral_health_tbl <- tibble(coral, is_diseased)
head(coral_health_tbl)
# Write your code here
# use extra cells if ne
#I started by making sure my probabilities worked perfectly
table(coral_health_tbl$is_diseased)
#then I used the rnorm function as directed
for_false <- rnorm(80,9,2)
for_true <- rnorm(20, 1, 3)
#i made these together into a vector
coral_cover <- c(for_false, for_true)
#sorted the tibble
sorted_coral_health_tbl <- arrange(coral_health_tbl, binary_health_status)
#binded the column I made to the table in the correct order
coral_health_tbl <- cbind(sorted_coral_health_tbl, coral_cover)
binary_health_status <- as.integer(is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
# Write you library imports here. E.g.:
library(tidyverse)
# ...
# Write your code here
# use extra cells if needed
sd_x <- sd
# Write your code here if you choose to answer the question above
# use extra cells if needed
data = matrix(1:50, ncol=5)
colnames(data) = c("variable_1", "variable_2", "variable_3", "variable_4", "variable_5")
data
# Write your code here
# use extra cells if needed
#HAVE YOU LOADED MY LIBRARY ABOVE. PLEASE MAKE SURE YOU DO.
data_tbl <- as_tibble(data)
Q2 <- apply(data_tbl, MARGIN = 2, sd_x)
Q2
# Write your code here
# use extra cells if needed
#I am a coral nerd so I added a few of my favorite species
coral_pop = c("Montipora capitata",
"Porites compressa",
"Porites lobata",
"Pavona duerdeni",
"Porites monticulosa",
"Porites evermanni")
#I also, as a nerd, wanted to give some semi-reasonable probabilities thinking about Kealakekua
coral <- sample(coral_pop, 100, replace = TRUE, prob = c(0.30, 0.2, 0.2, 0.05, 0.05, 0.2))
#Making the other one!!
disease = c(T,F)
is_diseased <- sample(disease, 100, replace = TRUE, prob = c(0.2, 0.8))
#make it a tibble! Not a data frame so that we can keep the column names
coral_health_tbl <- tibble(coral, is_diseased)
head(coral_health_tbl)
# Write your code here
# use extra cells if needed
rnorm(5, 10, 1)
#can you explain why I cannot use rnorm(n=5, mu=10, sd=1) without getting an error?
# Write your code here
# use extra cells if ne
#I started by making sure my probabilities worked perfectly
table(coral_health_tbl$is_diseased)
#then I used the rnorm function as directed
for_false <- rnorm(80,9,2)
for_true <- rnorm(20, 1, 3)
#i made these together into a vector
coral_cover <- c(for_false, for_true)
#sorted the tibble
sorted_coral_health_tbl <- arrange(coral_health_tbl, binary_health_status)
# Write you library imports here. E.g.:
library(tidyverse)
# ...
# Write your code here
# use extra cells if needed
sd_x <- sd
# Write your code here if you choose to answer the question above
# use extra cells if needed
data = matrix(1:50, ncol=5)
colnames(data) = c("variable_1", "variable_2", "variable_3", "variable_4", "variable_5")
data
# Write your code here
# use extra cells if needed
#HAVE YOU LOADED MY LIBRARY ABOVE. PLEASE MAKE SURE YOU DO.
data_tbl <- as_tibble(data)
Q2 <- apply(data_tbl, MARGIN = 2, sd_x)
Q2
# Write your code here
# use extra cells if needed
#I am a coral nerd so I added a few of my favorite species
coral_pop = c("Montipora capitata",
"Porites compressa",
"Porites lobata",
"Pavona duerdeni",
"Porites monticulosa",
"Porites evermanni")
#I also, as a nerd, wanted to give some semi-reasonable probabilities thinking about Kealakekua
coral <- sample(coral_pop, 100, replace = TRUE, prob = c(0.30, 0.2, 0.2, 0.05, 0.05, 0.2))
#Making the other one!!
disease = c(T,F)
is_diseased <- sample(disease, 100, replace = TRUE, prob = c(0.2, 0.8))
#make it a tibble! Not a data frame so that we can keep the column names
coral_health_tbl <- tibble(coral, is_diseased)
head(coral_health_tbl)
# Write your code here
# use extra cells if needed
rnorm(5, 10, 1)
#can you explain why I cannot use rnorm(n=5, mu=10, sd=1) without getting an error?
# Write your code here
# use extra cells if ne
#I started by making sure my probabilities worked perfectly
table(coral_health_tbl$is_diseased)
#then I used the rnorm function as directed
for_false <- rnorm(80,9,2)
for_true <- rnorm(20, 1, 3)
#i made these together into a vector
coral_cover <- c(for_false, for_true)
#sorted the tibble
sorted_coral_health_tbl <- arrange(coral_health_tbl, is_diseased)
#binded the column I made to the table in the correct order
coral_health_tbl <- cbind(sorted_coral_health_tbl, coral_cover)
head(coral_health_tbl)
binary_health_status <- as.integer(is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
# Write you library imports here. E.g.:
library(tidyverse)
# ...
# Write your code here
# use extra cells if needed
sd_x <- sd
# Write your code here if you choose to answer the question above
# use extra cells if needed
data = matrix(1:50, ncol=5)
colnames(data) = c("variable_1", "variable_2", "variable_3", "variable_4", "variable_5")
data
# Write your code here
# use extra cells if needed
#HAVE YOU LOADED MY LIBRARY ABOVE. PLEASE MAKE SURE YOU DO.
data_tbl <- as_tibble(data)
Q2 <- apply(data_tbl, MARGIN = 2, sd_x)
Q2
# Write your code here
# use extra cells if needed
#I am a coral nerd so I added a few of my favorite species
coral_pop = c("Montipora capitata",
"Porites compressa",
"Porites lobata",
"Pavona duerdeni",
"Porites monticulosa",
"Porites evermanni")
#I also, as a nerd, wanted to give some semi-reasonable probabilities thinking about Kealakekua
coral <- sample(coral_pop, 100, replace = TRUE, prob = c(0.30, 0.2, 0.2, 0.05, 0.05, 0.2))
#Making the other one!!
disease = c(T,F)
is_diseased <- sample(disease, 100, replace = TRUE, prob = c(0.2, 0.8))
#make it a tibble! Not a data frame so that we can keep the column names
coral_health_tbl <- tibble(coral, is_diseased)
head(coral_health_tbl)
# Write your code here
# use extra cells if needed
rnorm(5, 10, 1)
#can you explain why I cannot use rnorm(n=5, mu=10, sd=1) without getting an error?
# Write your code here
# use extra cells if ne
#I started by making sure my probabilities worked perfectly
table(coral_health_tbl$is_diseased)
#then I used the rnorm function as directed
for_false <- rnorm(80,9,2)
for_true <- rnorm(20, 1, 3)
#i made these together into a vector
coral_cover <- c(for_false, for_true)
#sorted the tibble
sorted_coral_health_tbl <- arrange(coral_health_tbl, is_diseased)
#binded the column I made to the table in the correct order
coral_health_tbl <- cbind(sorted_coral_health_tbl, coral_cover)
binary_health_status <- as.integer(is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
binary_health_status <- as.integer(is_diseased)
binary_health_status
is_diseased
is_diseased
coral_health_tbl
binary_health_status <- as.integer(sorted_coral_health_tbl$is_diseased)
binary_health_status
binary_health_status <- as.integer(sorted_coral_health_tbl$is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
# Write you library imports here. E.g.:
library(tidyverse)
# ...
# Write your code here
# use extra cells if needed
sd_x <- sd
# Write your code here if you choose to answer the question above
# use extra cells if needed
data = matrix(1:50, ncol=5)
colnames(data) = c("variable_1", "variable_2", "variable_3", "variable_4", "variable_5")
data
# Write your code here
# use extra cells if needed
#HAVE YOU LOADED MY LIBRARY ABOVE. PLEASE MAKE SURE YOU DO.
data_tbl <- as_tibble(data)
Q2 <- apply(data_tbl, MARGIN = 2, sd_x)
Q2
# Write your code here
# use extra cells if needed
#I am a coral nerd so I added a few of my favorite species
coral_pop = c("Montipora capitata",
"Porites compressa",
"Porites lobata",
"Pavona duerdeni",
"Porites monticulosa",
"Porites evermanni")
#I also, as a nerd, wanted to give some semi-reasonable probabilities thinking about Kealakekua
coral <- sample(coral_pop, 100, replace = TRUE, prob = c(0.30, 0.2, 0.2, 0.05, 0.05, 0.2))
#Making the other one!!
disease = c(T,F)
is_diseased <- sample(disease, 100, replace = TRUE, prob = c(0.2, 0.8))
#make it a tibble! Not a data frame so that we can keep the column names
coral_health_tbl <- tibble(coral, is_diseased)
head(coral_health_tbl)
# Write your code here
# use extra cells if needed
rnorm(5, 10, 1)
#can you explain why I cannot use rnorm(n=5, mu=10, sd=1) without getting an error?
# Write your code here
# use extra cells if ne
#I started by making sure my probabilities worked perfectly
table(coral_health_tbl$is_diseased)
#then I used the rnorm function as directed
for_false <- rnorm(80,9,2)
for_true <- rnorm(20, 1, 3)
#i made these together into a vector
coral_cover <- c(for_false, for_true)
#sorted the tibble
sorted_coral_health_tbl <- arrange(coral_health_tbl, is_diseased)
#binded the column I made to the table in the correct order
coral_health_tbl <- cbind(sorted_coral_health_tbl, coral_cover)
binary_health_status <- as.integer(sorted_coral_health_tbl$is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
# Write you library imports here. E.g.:
library(tidyverse)
# ...
# Write your code here
# use extra cells if needed
sd_x <- sd
# Write your code here if you choose to answer the question above
# use extra cells if needed
data = matrix(1:50, ncol=5)
colnames(data) = c("variable_1", "variable_2", "variable_3", "variable_4", "variable_5")
data
# Write your code here
# use extra cells if needed
#HAVE YOU LOADED MY LIBRARY ABOVE. PLEASE MAKE SURE YOU DO.
data_tbl <- as_tibble(data)
Q2 <- apply(data_tbl, MARGIN = 2, sd_x)
Q2
# Write your code here
# use extra cells if needed
#I am a coral nerd so I added a few of my favorite species
coral_pop = c("Montipora capitata",
"Porites compressa",
"Porites lobata",
"Pavona duerdeni",
"Porites monticulosa",
"Porites evermanni")
#I also, as a nerd, wanted to give some semi-reasonable probabilities thinking about Kealakekua
coral <- sample(coral_pop, 100, replace = TRUE, prob = c(0.30, 0.2, 0.2, 0.05, 0.05, 0.2))
#Making the other one!!
disease = c(T,F)
is_diseased <- sample(disease, 100, replace = TRUE, prob = c(0.2, 0.8))
#make it a tibble! Not a data frame so that we can keep the column names
coral_health_tbl <- tibble(coral, is_diseased)
head(coral_health_tbl)
# Write your code here
# use extra cells if needed
rnorm(5, 10, 1)
#can you explain why I cannot use rnorm(n=5, mu=10, sd=1) without getting an error?
# Write your code here
# use extra cells if ne
#I started by making sure my probabilities worked perfectly
table(coral_health_tbl$is_diseased)
#then I used the rnorm function as directed
for_false <- rnorm(80,9,2)
for_true <- rnorm(20, 1, 3)
#i made these together into a vector
coral_cover <- c(for_false, for_true)
#sorted the tibble
sorted_coral_health_tbl <- arrange(coral_health_tbl, is_diseased)
#binded the column I made to the table in the correct order
coral_health_tbl <- cbind(sorted_coral_health_tbl, coral_cover)
binary_health_status <- as.integer(sorted_coral_health_tbl$is_diseased)
coral_health_tbl<- cbind(coral_health_tbl, binary_health_status)
head(coral_health_tbl)
library(ggplot2)
Q7_plot <- ggplot(coral_health_tbl)
Q7_plot <- ggplot(coral_health_tbl)
geom_histogram(coral_cover)
Q7_plot <- ggplot(coral_health_tbl, aes(coral_cover))
geom_histogram(binwidth=1)
Q7_plot <- ggplot(coral_health_tbl, aes(x=coral_cover))
geom_histogram(binwidth=1)
Q7_plot <- ggplot(coral_health_tbl, aes(x=coral_cover)) +
geom_histogram(binwidth=1)
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5), rnorm(200, mean=65, sd=5)))
)
head(df)
ggplot(df, aes(x=weight)) +
geom_histogram(binwidth=1)
head(coral_health_tbl)
df <- coral_health_tbl
ggplot(df, aes(x=weight)) + geom_histogram()
ggplot(df, aes(x=coral_cover)) + geom_histogram()
ggplot(coral_health_tbl, aes(x=coral_cover)) + geom_histogram()
ggplot(coral_health_tbl, aes(x=coral_cover)) + geom_histogram(binwidth = 1)
ggplot(coral_health_tbl, aes(x=coral_cover)) + geom_histogram(binwidth = 1, y = stat(count / sum(count)))
ggplot(coral_health_tbl, aes(x=coral_cover)) + geom_histogram(binwidth = 1, y = stat(count / sum(count))
)
ggplot(coral_health_tbl, aes(x=coral_cover)) + geom_histogram(binwidth = 1, y = stat(count / sum(count))
ggplot(coral_health_tbl, aes(x=coral_cover)) + geom_histogram(binwidth = 1, y = stat(count / sum(count))
ggplot(coral_health_tbl, aes(x=coral_cover)) + geom_histogram(binwidth = 1)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)))) + geom_histogram(binwidth = 1)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)))) + geom_histogram(binwidth = 1, color = binary_health_status)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count))), color =is_diseased) + geom_histogram(binwidth = 1)
Q7_plot <-ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count))), color =is_diseased) + geom_histogram(binwidth = 1)
Q7_plot
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), color =is_diseased)) + geom_histogram(binwidth = 1)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), color =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), foll =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), color="black"", fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), color="black, fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), color =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), color="black", fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), color=black, fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased), color="black") + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased), color="black") + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion".color="black")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion", color="black")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion", col="black")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion", col=I("black")
)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1) + labs(x="Coral Cover", y="Normalized proportion", col=I("black"))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion") + scale_color_manual(c("white", "grey"))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + scale_color_manual(c("white", "grey")) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion") + scale_color_manual(c("T" = "white", "F" = grey"))
)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion")
scale_color_manual(c("T" = "white", "F" = grey"))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion")
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion") + scale_color_manual(values = c("white", "grey"))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion") + scale_color_manual(values = c("T" = "white", "F" = "grey"))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion") + scale_color_manual(values = c("T" = "white", "F" = "red"))
Q7_plot <- ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion")
Q7_plot + scale_colour_manual(values = c("red","blue"))
Q7_plot + scale_fill_manual(values = c("red","blue"))
Q7_plot + scale_fill_manual(values = c("white","grey"))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_histogram(binwidth = 1, col=I("black")) + labs(x="Coral Cover", y="Normalized proportion")+ scale_fill_manual(values = c("white","grey"))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2) + xlim(c(-10, 20)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2) + xlim(c(-10, 20))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(range(coral_cover))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(range(coral_health_tbl$coral_cover))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(range(coral_health_tbl$coral_cover))
range(coral_health_tbl$coral_cover
)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(-4, 15)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(-400, 400)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim((2*range(coral_cover)))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim((4*range(coral_cover)))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim((2.5*range(coral_cover)))
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(-20, 20)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(-16, 20)
ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(-15, 20)
Q8_plot_2 <- ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim(-15, 20)
Q8_plot_2
Q8_plot <- ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim((2.5*range(coral_cover)))
Q8_plot
Q8_plot <- ggplot(coral_health_tbl, aes(x=coral_cover, y = stat(count / sum(count)), fill =is_diseased)) + geom_density(adjust = 2)+ scale_fill_manual(values = c("white","grey"))+xlim((2*range(coral_cover)))
Q8_plot
