} # End Calc_Site_nSurveysArea
### -------------------------------------------------------------
### GENERATE SITE FISH BIOMASS
# To use: Calc_Site_Bio(datafile, grouping_field)
# grouping_field could be CONSUMER_GROUP, SPECIES, COMMON_FAMILY must be in datafile
# returns dataframe with SITEVISITID, METHOD and MEAN SITE biomass (g per meter2 per grouping_field)
### -------------------------------------------------------------
Calc_Site_Bio<-function(x, grouping_field){
#add an Abundance m2 field to x
x$Bio_gm2<-Calc_Biomassgm2(x)
x$GROUP<-x[,grouping_field]
#Replicate ID is the base unit .. so pool up biomass at ReplicateID level, for the field of interest
base_cols=c("SITEVISITID","METHOD","REP", "REPLICATEID") # minimum set of fields to build up from
pool_cols<-c(base_cols,"GROUP")                # minimum set, plus the one we are interested in
#first calculate total biomass per rep for all values of this field
y<-aggregate(x$Bio_gm2,by=x[,pool_cols], sum)
names(y)<-c(pool_cols, "Bio_gm2")
#now format this more or less as a crosstab, with field of interest as column variable
y<-cast(y, SITEVISITID + METHOD + REP + REPLICATEID ~ GROUP, fun.aggregate=sum, value="Bio_gm2", fill=0)
#pool by Rep ("A","B","C" generally), then by site-survey (i.e. by SiteVisitID and Method)
num_row_cols=length(base_cols)
pool_cols<-c("SITEVISITID","METHOD","REP")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
num_row_cols=length(pool_cols) #working data now has fewer columns
pool_cols<-c("SITEVISITID", "METHOD")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
return(y)
} # End Calc_Site_Bio
### -------------------------------------------------------------
### CALCULATE BIOMASS PER M2 PER RECORD
# Support function for Calc_Site_Bio functions
# Will not be called directly by user
### -------------------------------------------------------------
Calc_Biomassgm2<-function(x){
# IDW return y .. do not modify x inside the function .. just pass out biomassgm2
# do this elsewhere - keep this function doing one thing - calculating biomassgm2 y$Srvy.Yr<-as.factor(y$Srvy.Yr)
Biomassperfish<-x$LW_A*((x$SIZE_*x$LENGTH_CONVERSION_FACTOR)^x$LW_B)
Biomassperrecord<-Biomassperfish*x$COUNT
Area<-ifelse(x$METHOD %in% c("nSPC", "nSPC-CCR"), pi*(7.5^2), ifelse(x$SIZE_ < 20, 50, 100))
return(Biomassperrecord/Area)
} # End Calc_Biomassgm2
### -------------------------------------------------------------
### CALCULATE SITE FISH ABUNDANCE
# To use: Calc_Site_Abund(datafile, grouping_field)
# grouping_field could be CONSUMER_GROUP, SPECIES, COMMON_FAMILY must be in datafile
# Returns dataframe with SITEVISITID, METHOD and MEAN SITE abundance (g per meter2 per grouping_field)
### -------------------------------------------------------------
Calc_Site_Abund<-function(x, grouping_field){
#add an Abundance m2 field to x
x$Abund_m2<-Calc_Abundm2(x)
#create pooling field to use in cast functions below
x$GROUP<-x[,grouping_field]
#Replicate ID is the base unit .. so pool up biomass at ReplicateID level, for the grouping field passed in
base_cols=c("SITEVISITID", "METHOD", "REP", "REPLICATEID") # minimum set of fields to build up from
pool_cols<-c(base_cols, "GROUP")                    # minimum set, plus the one we are interested in
#first calculate total abundance per rep for all values of this field
y<-aggregate(x$Abund_m2,by=x[,pool_cols], sum)
names(y)<-c(pool_cols, "Abund_m2")
#now format this more or less as a crosstab, with field of interest as column variable
y<-cast(y, SITEVISITID + METHOD + REP + REPLICATEID ~ GROUP, fun.aggregate=sum, value="Abund_m2", fill=0)
#pool by Rep ("A","B","C" generally), then by site-survey (i.e. by SiteVisitID and Method)
num_row_cols=length(base_cols)
pool_cols<-c("SITEVISITID","METHOD","REP")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
num_row_cols=length(pool_cols) #working data now has fewer columns
pool_cols<-c("SITEVISITID", "METHOD")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
return(y)
} # End Calc_Site_Abund
### -------------------------------------------------------------
### CALCULATE ABUNDANCE PER M2 PER RECORD
# Suport function for Calc_Site_Abund functions
# Will not be called directly by user
### -------------------------------------------------------------
Calc_Abundm2<-function(x){
# IDW return y .. do not modify x inside the function .. just pass out biomassgm2
# do this elsewhere - keep this function doing one thing - calculating biomassgm2 y$Srvy.Yr<-as.factor(y$Srvy.Yr)
Area<-ifelse(x$METHOD %in% c("nSPC", "nSPC-CCR"), pi*(7.5^2), ifelse(x$SIZE_ < 20, 50, 100))
return(x$COUNT/Area)
} # End Calc_Abundm2
### -------------------------------------------------------------
### CALCULATE BIOMASS PER M2 PER SIZE CLASS
# To use: Calc_Site_Bio_By_SizeClass(datafile, size_classes)
# size_classes is a vector of number cut offs
# returns dataframe with SITEVISITID mean estimates
### -------------------------------------------------------------
Calc_Site_Bio_By_SizeClass<-function(x, size_classes = c(0,10,20,30,40,50, Inf)){
#add a Biomassgm2 field to x
x$Bio_gm2<-Calc_Biomassgm2(x)
##add a size class field to x
x$sizeclass<-cut(x$SIZE_TL_CM, breaks = size_classes, include.lowest=TRUE)
#Replicate ID is the base unit .. so pool up biomass at ReplicateID level, for the field of interest
field_of_interest<-c("sizeclass") # this can later be a function parameter
base_cols=c("SITEVISITID","METHOD","REP", "REPLICATEID") # minimum set of fields to build up from
pool_cols<-c(base_cols,field_of_interest)                # minimum set, plus the one we are interested in
#first calculate total biomass per rep for all values of this field
y<-aggregate(x$Bio_gm2,by=x[,pool_cols], sum)
names(y)<-c(pool_cols, "Bio_gm2")
#now format this more or less as a crosstab, with field of interest as column variable
y<-cast(y, SITEVISITID + METHOD + REP + REPLICATEID ~ sizeclass, fun.aggregate=sum, value="Bio_gm2", fill=0)
#pool by Rep ("A","B","C" generally), then by site-survey (i.e. by SiteVisitID and Method)
num_row_cols=length(base_cols)
pool_cols<-c("SITEVISITID","METHOD","REP")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
num_row_cols=length(pool_cols) #working data now has fewer columns
pool_cols<-c("SITEVISITID", "METHOD")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
return(y)
} # End Calc_Site_Bio_By_SizeClass
### -------------------------------------------------------------
### CALCULATE ABUNDANCE PER M2 PER SIZE CLASS
# To use: Calc_Site_Abund_By_SizeClass(datafile, size_classes)
# datafile contains base_cols ("SITEVISITID","METHOD","REP", "REPLICATEID") and pool cols
# size_classes is a vector to create size classes
# returns dataframe with SITEVISITID mean estimates
### -------------------------------------------------------------
Calc_Site_Abund_By_SizeClass<-function(x, size_classes = c(0,10,20,30,40,50,Inf)){
#add an abundance field to x
x$Abund_m2<-Calc_Abundm2(x)
##add a size class field to x
x$sizeclass<-cut(x$SIZE_TL_CM, breaks = size_classes, include.lowest=TRUE)
#Replicate ID is the base unit .. so pool up biomass at ReplicateID level, for the field of interest
field_of_interest<-c("sizeclass") # this can later be a function parameter
base_cols=c("SITEVISITID","METHOD","REP", "REPLICATEID") # minimum set of fields to build up from
pool_cols<-c(base_cols,field_of_interest)                # minimum set, plus the one we are interested in
#first calculate total biomass per rep for all values of this field
y<-aggregate(x$Abund_m2,by=x[,pool_cols], sum)
names(y)<-c(pool_cols, "Abund_m2")
#now format this more or less as a crosstab, with field of interest as column variable
y<-cast(y, SITEVISITID + METHOD + REP + REPLICATEID ~ sizeclass, fun.aggregate=sum, value="Abund_m2", fill=0)
#pool by Rep ("A","B","C" generally), then by site-survey (i.e. by SiteVisitID and Method)
num_row_cols=length(base_cols)
pool_cols<-c("SITEVISITID","METHOD","REP")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
num_row_cols=length(pool_cols) #working data now has fewer columns
pool_cols<-c("SITEVISITID", "METHOD")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
return(y)
} # End Calc_Site_Abund_By_SizeClass
### -------------------------------------------------------------
### CALCULATE MEAN LENGTH OF FISH
# To use: Calc_Site_Abund_By_SizeClass(datafile, minimum size)
# datafile contains base_cols (SITEVISITID) and pool cols SIZE_TL_CM
# fish smaller than minimum size are not included i.e removes small recruits
# returns dataframe with SITEVISITID mean estimates
### -------------------------------------------------------------
Calc_Site_MeanLength<-function(x, min_size=1){
# function assumes that x is a data frame with at least the columns/elements listed in base_cols, plus the field_of_interest, in this case CommonFamily
# function returns a data frame with Site_VisitID, Method, and mean size of fish (total length in cm)
#Base unit will be the entire survey
base_cols=c("SITEVISITID", "METHOD")
pool_cols<-c(base_cols, "SIZE_TL_CM")
#set count to zero for all sizes smaller than min size
x[x$SIZE_TL_CM < (min_size),]$COUNT<-0
#sum total number offishes per SIZE_
y<-aggregate(x$COUNT,by=x[,pool_cols], sum)
names(y)<-c(pool_cols, "COUNT")
y$CS<-y$COUNT*y$SIZE_TL_CM
#now format this more or less as a crosstab, with field of interest as column variable
y<-aggregate(y[,c("COUNT", "CS")],by=y[,base_cols], sum)
y$MEAN_SIZE<-y$CS/y$COUNT
return(y[,c(base_cols, "MEAN_SIZE")])
} # End Calc_Site_MeanLength
### -------------------------------------------------------------
### CALCULATE FISH SPECIES RICHNESS
# To use: Calc_Site_Species_Rich(datafile)
# Datafile contains cols "SITEVISITID", "METHOD", "REP", "SPECIES"
# Species here means the number of unique species
# Returns dataframe with SITEVISITID mean estimate
### -------------------------------------------------------------
Calc_Site_Species_Rich<-function(x){
# Modification fos tandard Calc_Site_Species_Richness to not count species with zero counts (as they can be left in data file to ensure that the site has data records at all)
y<-aggregate(x$COUNT,by=x[,c("SITEVISITID", "METHOD", "REP", "SPECIES")], sum)	#convert to count per species per rep
y[y$x>1,]$x<-1																	#convert any non-zero count to 1, so we can sum those to get total number of species with count>0
z<-aggregate(y$x,by=y[,c("SITEVISITID", "METHOD", "REP")], sum)  		            # count number of species with non-zero counts this REP
xx<-aggregate(z$x,by=z[,c("SITEVISITID", "METHOD")], mean)				  		# count number of entries per rep
dimnames(xx)[[2]]<-c("SITEVISITID", "METHOD", "SPECIESRICHNESS")
return(xx)
}
# end Calc_Site_Species_Rich
x1a<-Calc_Site_Bio(wd, "PRIMARY") # BIOMASS BY GROUP OF INTEREST
source("JZ_Heenan2017_functions.R")
View(hard_cc)
UNIQUE_SURVEY<-c("SITEVISITID", "METHOD")
UNIQUE_REP<-c(UNIQUE_SURVEY, "REP")
UNIQUE_COUNT<-c(UNIQUE_REP, "REPLICATEID")
View(wd)
+     geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
ggplot(data = wd) +
+     geom_point(mapping = aes(x = ISLAND, y = HARD_CORAL, color = REGION))
ggplot(data = wd) +
geom_point(mapping = aes(x = ISLAND, y = HARD_CORAL, color = REGION))
ggplot(data = wd) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
ggplot(data = wd) +
geom_point(mapping = aes(x = HARD_CORAL, y = DEPTH_M, color = REGION))
ggplot(data = hard_cc) +
geom_point(mapping = aes(x = HARD_CORAL, y = DEPTH_M, color = REGION))
ggplot(data = hard_cc) +
geom_point(mapping = aes(x = HARD_CORAL, y = -DEPTH_M, color = REGION))
ggplot(data = hard_cc) +
geom_point(mapping = aes(x = HARD_CORAL, y = DEPTH_M, color = REGION))
high_cc <- subset(wd, wd$HARD_CORAL > 49.99)
ggplot(data = high_cc) +
geom_point(mapping = aes(x = HARD_CORAL, y = DEPTH_M, color = REGION))
ggplot(data = high_cc) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
#now we only want data from instantaneous (I) and noninstantaneous (N) observations
wd<-subset(raw_data, (raw_data$OBS_TYPE =="I"|raw_data$OBS_TYPE =="N"))
#and we only want to look at surveys from habitats with less than 50% sand
wd<-subset(wd, wd$SAND < 50.01)
#if we want to look at areas with high coral cover only
high_cc <- subset(wd, wd$HARD_CORAL > 49.99)
#lastly, we want to focus on surveys that took place in less than 18 m
wd<-subset(wd, wd$DEPTH_M < 18.01)
SHARKS_LIST <- c("Carcharhinus amblyrhynchos", "Carcharhinus galapagensis", "Carcharhinus melanopterus","Triaenodon obesus","Sphyrna lewini") #these are the only shark species recorded in HI data
print(SHARKS_LIST)
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
SharkDF = raw_data[which(raw_data$TAXONNAME %in% SHARKS_LIST)]
View(wd)
fishIsland=data.frame(island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})),fishRichness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
boxplot(fishRichness~island,data=fishIsland, main="Richness by Island",
xlab="Island", ylab="Richness")
940+940+300
View(fishIsland)
Richness_by_Island <- data.frame(island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})),fishRichness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(fishIsland)
View(Richness_by_Island)
Sharks=c("Carcharhinus amblyrhynchos","Carcharhinus galapagensis","Carcharhinus melanopterus","Triaenodon obesus","Sphyrna lewini")
SharkDF=raw_data[which(raw_data$TAXONNAME %in% Sharks),]
## And again, need to change this to use ggplot
plot(as.factor(SharkDF$ISLAND))
View(SharkDF)
#This shows by depth how much hard coral was at each site in the subset of areas with coral cover >50%, which makes it seem like depth was not a significant factor in coral cover
ggplot(data = high_cc) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
#Show number of observations of sharks by island
SHARKS_LIST <- c("Carcharhinus amblyrhynchos", "Carcharhinus galapagensis", "Carcharhinus melanopterus","Triaenodon obesus","Sphyrna lewini")
#these are the only shark species recorded in HI data
SharkDF = raw_data[which(raw_data$TAXONNAME %in% SHARKS_LIST)]
#This shows by depth how much hard coral was at each site in the subset of areas with coral cover >50%, which makes it seem like depth was not a significant factor in coral cover
ggplot(data = high_cc) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
####################
#Wrote an lapply for Madhi to make us a little dataframe that shows species richness at each survey and kept the island row
Richness_by_Island <- data.frame(island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})),fishRichness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
# And We need to edit it / make it in ggplot instead, but here is a quick boxblot of species richness by island
boxplot(fishRichness~island,data=fishIsland, main="Richness by Island",
xlab="Island", ylab="Richness")
##################
#Now I just wanted to see where the sharks are at.
Sharks=c("Carcharhinus amblyrhynchos","Carcharhinus galapagensis","Carcharhinus melanopterus","Triaenodon obesus","Sphyrna lewini")
SharkDF=raw_data[which(raw_data$TAXONNAME %in% Sharks),]
## And again, need to change this to use ggplot
plot(as.factor(SharkDF$ISLAND))
##################
#Here we start to try to make our own biomass calculations
##SITEVISITID, METHOD and MEAN SITE
raw_data$BiomassPerFish=raw_data$LW_A*((raw_data$SIZE_TL_CM*raw_data$LENGTH_CONVERSION_FACTOR)^raw_data$LW_B)
raw_data$BiomassPerObs=raw_data$BiomassPerFish*raw_data$COUNT
MeanSite=data.frame(Site=NA,TotalBiomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
MeanSite=rbind(MeanSite,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
MeanSite=MeanSite[-1,]
plot(TotalBiomass~Year,data=MeanSite[MeanSite$Island=="Oahu",])
AvgBiomassIslandYear=data.frame(island=NA,biomass=NA)
rm(i)
for(i in 1:length(unique(MeanSite$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(MeanSite$Island)[i],mean(as.numeric(MeanSite$TotalBiomass[MeanSite$Island==unique(MeanSite$Island)[i]]))))
}
AvgBiomassIslandYear=AvgBiomassIslandYear[-1,]
AvgBiomassIslandYear$biomass=as.numeric(AvgBiomassIslandYear$biomass)
#And another non-ggplot plot
boxplot(biomass~island,data=AvgBiomassIslandYear)
?lapply
?lapply(list, function)
?apply
boxplot(fishRichness~island,data=fishIsland, main="Richness by Island",
xlab="Island", ylab="Richness")
View(Richness_by_Island)
ggplot(data = high_cc) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
Sharks=c("Carcharhinus amblyrhynchos","Carcharhinus galapagensis","Carcharhinus melanopterus","Triaenodon obesus","Sphyrna lewini")
SharkDF=raw_data[which(raw_data$TAXONNAME %in% Sharks),]
plot(as.factor(SharkDF$ISLAND))
boxplot(biomass~island,data=AvgBiomassIslandYear)
View(AvgBiomassIslandYear)
View(fishIsland)
View(MeanSite)
View(Richness_by_Island)
View(Richness_by_Island)
View(raw_data)
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
Richness_by_Island_2 <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})),Year=unlist(lapply(c(1:length(unique(raw_data$OBS_YEAR))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})) Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
Richness_by_Island_2 <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$OBS_YEAR))),function(x){raw_data$ISLAND[which(raw_data$OBS_YEAR==unique(raw_data$OBS_YEAR)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
Richness_by_Island_2 <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$OBS_YEAR==unique(raw_data$OBS_YEAR)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(Richness_by_Island_2)
Richness_by_Island_2 <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(Richness_by_Island_2)
Calc_Biomassgm2<-function(x){
# IDW return y .. do not modify x inside the function .. just pass out biomassgm2
# do this elsewhere - keep this function doing one thing - calculating biomassgm2 y$Srvy.Yr<-as.factor(y$Srvy.Yr)
Biomassperfish<-x$LW_A*((x$SIZE_*x$LENGTH_CONVERSION_FACTOR)^x$LW_B)
Biomassperrecord<-Biomassperfish*x$COUNT
Area<-ifelse(x$METHOD %in% c("nSPC", "nSPC-CCR"), pi*(7.5^2), ifelse(x$SIZE_ < 20, 50, 100))
return(Biomassperrecord/Area)
}
View(Calc_Biomassgm2)
Calc_Site_Bio<-function(x, grouping_field){
#add an Abundance m2 field to x
x$Bio_gm2<-Calc_Biomassgm2(x)
x$GROUP<-x[,grouping_field]
#Replicate ID is the base unit .. so pool up biomass at ReplicateID level, for the field of interest
base_cols=c("SITEVISITID","METHOD","REP", "REPLICATEID") # minimum set of fields to build up from
pool_cols<-c(base_cols,"GROUP")                # minimum set, plus the one we are interested in
#first calculate total biomass per rep for all values of this field
y<-aggregate(x$Bio_gm2,by=x[,pool_cols], sum)
names(y)<-c(pool_cols, "Bio_gm2")
#now format this more or less as a crosstab, with field of interest as column variable
y<-cast(y, SITEVISITID + METHOD + REP + REPLICATEID ~ GROUP, fun.aggregate=sum, value="Bio_gm2", fill=0)
#pool by Rep ("A","B","C" generally), then by site-survey (i.e. by SiteVisitID and Method)
num_row_cols=length(base_cols)
pool_cols<-c("SITEVISITID","METHOD","REP")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
num_row_cols=length(pool_cols) #working data now has fewer columns
pool_cols<-c("SITEVISITID", "METHOD")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
return(y)
}
test <- Calc_Site_Bio(raw_data,"PISCIVORE")
View(MeanSite)
Richness_by_Island_and_Year <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(Richness_by_Island_and_Year)
ggplot(Richness_by_Island_and_Year, aes(color = Richness_by_Island_and_Year$Year)
+ geom_boxplot (x=Richness_by_Island_and_Year$Island, y =Richness_by_Island_and_Year$Species_Richness)
)
ggplot(Richness_by_Island_and_Year, aes(color = Richness_by_Island_and_Year$Year)
+ geom_boxplot (mapping = aes(x=Richness_by_Island_and_Year$Island, y =Richness_by_Island_and_Year$Species_Richness))
)
ggplot(Richness_by_Island_and_Year, aes(color = Richness_by_Island_and_Year$Year))
+ geom_boxplot (mapping = aes(x=Richness_by_Island_and_Year$Island, y =Richness_by_Island_and_Year$Species_Richness))
ggplot(Richness_by_Island_and_Year,)
+ geom_boxplot (mapping = aes(x=Island, y =$Species_Richness, color = Year))
ggplot(Richness_by_Island_and_Year,)
+ geom_boxplot (mapping = aes(x=Island, y =Species_Richness, color = Year))
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness, color = Year))
+ geom_boxplot ()
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness))
+ geom_boxplot ()
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness)) + geom_boxplot ()
ggplot(Richness_by_Island_and_Year,aes(x=Year, y =Species_Richness)) + geom_boxplot ()
View(Richness_by_Island_and_Year)
ggplot(Richness_by_Island_and_Year,aes(x=Year, y =Species_Richness)) + geom_point ()
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness, color = Year)) + geom_point ()
ggplot(Richness_by_Island_and_Year,aes(x=Year, y =Species_Richness, color = Island)) + geom_point ()
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness)) + geom_boxplot ()
Richness_by_Depth_and_Year <- data.frame( Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(Richness_by_Depth_and_Year)
ggplot(Richness_by_Depth_and_Year,aes(x=Depth, y =Species_Richness)) + geom_point ()
Richness_by_Depth_and_Year <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
After a lot of thought and agonizing, I have decided it is time to look into options for rehoming my lovely rescue dog Eddie.
ggplot(Richness_by_Depth_and_Year,aes(x=Depth, y =Species_Richness, color = Island)) + geom_point ()
unique(Richness_by_Depth_and_Year$Island)
"Main Hawaiian Islands" <- c("Hawaii", "Kauai", "Maui", "Molokai", "Lanai", "Niihau", "Oahu")
Richness_by_Depth_and_Year <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
ggplot(Richness_by_Depth_and_Year,aes(x=Depth, y =Species_Richness, color = Region)) + geom_point ()
View(Richness_by_Island_and_Year)
View(MeanSite)
test <- as.numeric(MeanSite$TotalBiomass)
"Observed Biomass" <- as.numeric(MeanSite$TotalBiomass)
Biomass_at_sites <- cbind(MeanSite, "Observed Biomass")
View(MeanSite)
View(Biomass_at_sites)
Observed_Biomass <- as.numeric(MeanSite$TotalBiomass)
Biomass_at_sites <- cbind(MeanSite, `Observed Biomass`)
ggplot(Biomass_at_sites,aes(x=Island, y ='Observed Biomass')) + geom_boxplot ()
ggplot(Biomass_at_sites,aes(x=Island, y =TotalBiomass)) + geom_boxplot ()
plot(as.factor(SharkDF$ISLAND))
ggplot(SharkDF, aes(x=ISLAND, y=COUNT)+geom_col()
)
ggplot(SharkDF, aes(x=ISLAND, y=COUNT))+geom_col()
ggplot(SharkDF, aes(x=ISLAND, y=COUNT, color = REGION))+geom_col()
ggplot(SharkDF, aes(x=ISLAND, y=COUNT, color = REGION))+geom_col()+ theme(axis.text.x=element_text(angle=90,hjust=1))
ggplot(SharkDF, aes(x=ISLAND, y=COUNT, fill = REGION))+geom_col()+ theme(axis.text.x=element_text(angle=90,hjust=1))
Richness_by_Depth_and_Year <- data.frame( Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
ggplot(SharkDF, aes(x=ISLAND, y=COUNT, fill = REGION))+geom_col()+ theme(axis.text.x=element_text(angle=90,hjust=1))+ facet_grid(. ~ REGION)
raw_data$BiomassPerFish=raw_data$LW_A*((raw_data$SIZE_TL_CM*raw_data$LENGTH_CONVERSION_FACTOR)^raw_data$LW_B)
raw_data$BiomassPerObs=raw_data$BiomassPerFish*raw_data$COUNT
MeanSite=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
MeanSite=rbind(MeanSite,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
MeanSite=MeanSite[-1,]
plot(TotalBiomass~Year,data=MeanSite[MeanSite$Island=="Oahu",])
raw_data$BiomassPerFish=raw_data$LW_A*((raw_data$SIZE_TL_CM*raw_data$LENGTH_CONVERSION_FACTOR)^raw_data$LW_B)
raw_data$BiomassPerObs=raw_data$BiomassPerFish*raw_data$COUNT
MeanSite=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
MeanSite=rbind(MeanSite,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
MeanSite=MeanSite[-1,]
plot(TotalBiomass~Year,data=MeanSite[MeanSite$Island=="Oahu",])
View(AvgBiomassIslandYear)
View(Biomass_at_sites)
View(Biomass_at_sites)
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = Island, y = Observed_Biomass)) + geom_boxplot ()
Biomass_by_Island
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = island, y = biomass)) + geom_boxplot ()
Biomass_by_Island
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = island, y = biomass)) + geom_col ()
Biomass_by_Island
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = island, y = biomass)) + geom_col ()+ theme(axis.text.x=element_text(angle=90,hjust=1))
Biomass_by_Island
MeanSite1=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
MeanSite1=rbind(MeanSite1,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
Biomass_at_Site=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
Biomass_at_Site=rbind(Biomass_at_Site,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
Biomass_at_Site=Biomass_at_Site[-1,]
Biomass_for_Survey=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
Biomass_for_Survey=rbind(Biomass_for_Survey,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
eric
Biomass_for_Survey=Biomass_for_Survey[-1,]
Biomass_for_Survey$Total_Biomass <- as.numeric(Biomass_for_Survey$Total_Biomass)
plot(TotalBiomass~Year,data=Biomass_for_Survey[Biomass_for_Survey$Island=="Oahu",])
plot(Total_Biomass~Year,data=Biomass_for_Survey[Biomass_for_Survey$Island=="Oahu",])
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = island, y = biomass)) + geom_col ()+ theme(axis.text.x=element_text(angle=90,hjust=1))
Biomass_by_Island
for(i in 1:length(unique(raw_data$SITE))){
Biomass_for_Survey=rbind(Biomass_for_Survey,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$REGION[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
Biomass_for_Survey=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Region=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
Biomass_for_Survey=rbind(Biomass_for_Survey,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$REGION[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
View(Biomass_for_Survey)
Biomass_for_Survey=Biomass_for_Survey[-1,]
Biomass_for_Survey$Total_Biomass <- as.numeric(Biomass_for_Survey$Total_Biomass)
View(MeanSite)
View(MeanSite)
AvgBiomassIslandYear=data.frame(Island=NA,Region=NA, Biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i] Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
AvgBiomassIslandYear=AvgBiomassIslandYear[-1,]
AvgBiomassIslandYear$TotalBiomass=as.numeric(AvgBiomassIslandYear$TotalBiomass)
AvgBiomassIslandYear$Biomass=as.numeric(AvgBiomassIslandYear$Biomass)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
AvgBiomassIslandYear=data.frame(Island=NA, Region=NA, Biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
AvgBiomassIslandYear=AvgBiomassIslandYear[-1,]
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$Total_Biomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$Total_Biomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
Biomass_by_Island <- ggplot(Biomass_for_Survey,aes(x = Island, y = Total_Biomass)) + geom_boxplot ()
Biomass_by_Island
