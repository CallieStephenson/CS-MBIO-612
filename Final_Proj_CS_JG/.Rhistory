?lapply(list, function)
?apply
boxplot(fishRichness~island,data=fishIsland, main="Richness by Island",
xlab="Island", ylab="Richness")
View(Richness_by_Island)
ggplot(data = high_cc) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
Sharks=c("Carcharhinus amblyrhynchos","Carcharhinus galapagensis","Carcharhinus melanopterus","Triaenodon obesus","Sphyrna lewini")
SharkDF=raw_data[which(raw_data$TAXONNAME %in% Sharks),]
plot(as.factor(SharkDF$ISLAND))
boxplot(biomass~island,data=AvgBiomassIslandYear)
View(AvgBiomassIslandYear)
View(fishIsland)
View(MeanSite)
View(Richness_by_Island)
View(Richness_by_Island)
View(raw_data)
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
Richness_by_Island_2 <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})),Year=unlist(lapply(c(1:length(unique(raw_data$OBS_YEAR))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})) Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
Richness_by_Island_2 <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$OBS_YEAR))),function(x){raw_data$ISLAND[which(raw_data$OBS_YEAR==unique(raw_data$OBS_YEAR)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
Richness_by_Island_2 <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$OBS_YEAR==unique(raw_data$OBS_YEAR)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(Richness_by_Island_2)
Richness_by_Island_2 <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(Richness_by_Island_2)
Calc_Biomassgm2<-function(x){
# IDW return y .. do not modify x inside the function .. just pass out biomassgm2
# do this elsewhere - keep this function doing one thing - calculating biomassgm2 y$Srvy.Yr<-as.factor(y$Srvy.Yr)
Biomassperfish<-x$LW_A*((x$SIZE_*x$LENGTH_CONVERSION_FACTOR)^x$LW_B)
Biomassperrecord<-Biomassperfish*x$COUNT
Area<-ifelse(x$METHOD %in% c("nSPC", "nSPC-CCR"), pi*(7.5^2), ifelse(x$SIZE_ < 20, 50, 100))
return(Biomassperrecord/Area)
}
View(Calc_Biomassgm2)
Calc_Site_Bio<-function(x, grouping_field){
#add an Abundance m2 field to x
x$Bio_gm2<-Calc_Biomassgm2(x)
x$GROUP<-x[,grouping_field]
#Replicate ID is the base unit .. so pool up biomass at ReplicateID level, for the field of interest
base_cols=c("SITEVISITID","METHOD","REP", "REPLICATEID") # minimum set of fields to build up from
pool_cols<-c(base_cols,"GROUP")                # minimum set, plus the one we are interested in
#first calculate total biomass per rep for all values of this field
y<-aggregate(x$Bio_gm2,by=x[,pool_cols], sum)
names(y)<-c(pool_cols, "Bio_gm2")
#now format this more or less as a crosstab, with field of interest as column variable
y<-cast(y, SITEVISITID + METHOD + REP + REPLICATEID ~ GROUP, fun.aggregate=sum, value="Bio_gm2", fill=0)
#pool by Rep ("A","B","C" generally), then by site-survey (i.e. by SiteVisitID and Method)
num_row_cols=length(base_cols)
pool_cols<-c("SITEVISITID","METHOD","REP")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
num_row_cols=length(pool_cols) #working data now has fewer columns
pool_cols<-c("SITEVISITID", "METHOD")
y<-aggregate(y[,(num_row_cols+1):dim(y)[2]],by=y[,pool_cols], mean)
return(y)
}
test <- Calc_Site_Bio(raw_data,"PISCIVORE")
View(MeanSite)
Richness_by_Island_and_Year <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(Richness_by_Island_and_Year)
ggplot(Richness_by_Island_and_Year, aes(color = Richness_by_Island_and_Year$Year)
+ geom_boxplot (x=Richness_by_Island_and_Year$Island, y =Richness_by_Island_and_Year$Species_Richness)
)
ggplot(Richness_by_Island_and_Year, aes(color = Richness_by_Island_and_Year$Year)
+ geom_boxplot (mapping = aes(x=Richness_by_Island_and_Year$Island, y =Richness_by_Island_and_Year$Species_Richness))
)
ggplot(Richness_by_Island_and_Year, aes(color = Richness_by_Island_and_Year$Year))
+ geom_boxplot (mapping = aes(x=Richness_by_Island_and_Year$Island, y =Richness_by_Island_and_Year$Species_Richness))
ggplot(Richness_by_Island_and_Year,)
+ geom_boxplot (mapping = aes(x=Island, y =$Species_Richness, color = Year))
ggplot(Richness_by_Island_and_Year,)
+ geom_boxplot (mapping = aes(x=Island, y =Species_Richness, color = Year))
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness, color = Year))
+ geom_boxplot ()
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness))
+ geom_boxplot ()
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness)) + geom_boxplot ()
ggplot(Richness_by_Island_and_Year,aes(x=Year, y =Species_Richness)) + geom_boxplot ()
View(Richness_by_Island_and_Year)
ggplot(Richness_by_Island_and_Year,aes(x=Year, y =Species_Richness)) + geom_point ()
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness, color = Year)) + geom_point ()
ggplot(Richness_by_Island_and_Year,aes(x=Year, y =Species_Richness, color = Island)) + geom_point ()
ggplot(Richness_by_Island_and_Year,aes(x=Island, y =Species_Richness)) + geom_boxplot ()
Richness_by_Depth_and_Year <- data.frame( Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(Richness_by_Depth_and_Year)
ggplot(Richness_by_Depth_and_Year,aes(x=Depth, y =Species_Richness)) + geom_point ()
Richness_by_Depth_and_Year <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
After a lot of thought and agonizing, I have decided it is time to look into options for rehoming my lovely rescue dog Eddie.
ggplot(Richness_by_Depth_and_Year,aes(x=Depth, y =Species_Richness, color = Island)) + geom_point ()
unique(Richness_by_Depth_and_Year$Island)
"Main Hawaiian Islands" <- c("Hawaii", "Kauai", "Maui", "Molokai", "Lanai", "Niihau", "Oahu")
Richness_by_Depth_and_Year <- data.frame( Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
ggplot(Richness_by_Depth_and_Year,aes(x=Depth, y =Species_Richness, color = Region)) + geom_point ()
View(Richness_by_Island_and_Year)
View(MeanSite)
test <- as.numeric(MeanSite$TotalBiomass)
"Observed Biomass" <- as.numeric(MeanSite$TotalBiomass)
Biomass_at_sites <- cbind(MeanSite, "Observed Biomass")
View(MeanSite)
View(Biomass_at_sites)
Observed_Biomass <- as.numeric(MeanSite$TotalBiomass)
Biomass_at_sites <- cbind(MeanSite, `Observed Biomass`)
ggplot(Biomass_at_sites,aes(x=Island, y ='Observed Biomass')) + geom_boxplot ()
ggplot(Biomass_at_sites,aes(x=Island, y =TotalBiomass)) + geom_boxplot ()
plot(as.factor(SharkDF$ISLAND))
ggplot(SharkDF, aes(x=ISLAND, y=COUNT)+geom_col()
)
ggplot(SharkDF, aes(x=ISLAND, y=COUNT))+geom_col()
ggplot(SharkDF, aes(x=ISLAND, y=COUNT, color = REGION))+geom_col()
ggplot(SharkDF, aes(x=ISLAND, y=COUNT, color = REGION))+geom_col()+ theme(axis.text.x=element_text(angle=90,hjust=1))
ggplot(SharkDF, aes(x=ISLAND, y=COUNT, fill = REGION))+geom_col()+ theme(axis.text.x=element_text(angle=90,hjust=1))
Richness_by_Depth_and_Year <- data.frame( Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
ggplot(SharkDF, aes(x=ISLAND, y=COUNT, fill = REGION))+geom_col()+ theme(axis.text.x=element_text(angle=90,hjust=1))+ facet_grid(. ~ REGION)
raw_data$BiomassPerFish=raw_data$LW_A*((raw_data$SIZE_TL_CM*raw_data$LENGTH_CONVERSION_FACTOR)^raw_data$LW_B)
raw_data$BiomassPerObs=raw_data$BiomassPerFish*raw_data$COUNT
MeanSite=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
MeanSite=rbind(MeanSite,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
MeanSite=MeanSite[-1,]
plot(TotalBiomass~Year,data=MeanSite[MeanSite$Island=="Oahu",])
raw_data$BiomassPerFish=raw_data$LW_A*((raw_data$SIZE_TL_CM*raw_data$LENGTH_CONVERSION_FACTOR)^raw_data$LW_B)
raw_data$BiomassPerObs=raw_data$BiomassPerFish*raw_data$COUNT
MeanSite=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
MeanSite=rbind(MeanSite,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
MeanSite=MeanSite[-1,]
plot(TotalBiomass~Year,data=MeanSite[MeanSite$Island=="Oahu",])
View(AvgBiomassIslandYear)
View(Biomass_at_sites)
View(Biomass_at_sites)
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = Island, y = Observed_Biomass)) + geom_boxplot ()
Biomass_by_Island
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = island, y = biomass)) + geom_boxplot ()
Biomass_by_Island
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = island, y = biomass)) + geom_col ()
Biomass_by_Island
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = island, y = biomass)) + geom_col ()+ theme(axis.text.x=element_text(angle=90,hjust=1))
Biomass_by_Island
MeanSite1=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
MeanSite1=rbind(MeanSite1,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
Biomass_at_Site=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
Biomass_at_Site=rbind(Biomass_at_Site,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
Biomass_at_Site=Biomass_at_Site[-1,]
Biomass_for_Survey=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
Biomass_for_Survey=rbind(Biomass_for_Survey,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
eric
Biomass_for_Survey=Biomass_for_Survey[-1,]
Biomass_for_Survey$Total_Biomass <- as.numeric(Biomass_for_Survey$Total_Biomass)
plot(TotalBiomass~Year,data=Biomass_for_Survey[Biomass_for_Survey$Island=="Oahu",])
plot(Total_Biomass~Year,data=Biomass_for_Survey[Biomass_for_Survey$Island=="Oahu",])
Biomass_by_Island <- ggplot(AvgBiomassIslandYear,aes(x = island, y = biomass)) + geom_col ()+ theme(axis.text.x=element_text(angle=90,hjust=1))
Biomass_by_Island
for(i in 1:length(unique(raw_data$SITE))){
Biomass_for_Survey=rbind(Biomass_for_Survey,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$REGION[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
Biomass_for_Survey=data.frame(Site=NA,Total_Biomass=NA,Island=NA,Region=NA,Year=NA)
for(i in 1:length(unique(raw_data$SITE))){
Biomass_for_Survey=rbind(Biomass_for_Survey,c(unique(raw_data$SITE)[i],sum(raw_data$BiomassPerObs[which(raw_data$SITE==unique(raw_data$SITE)[i])]),raw_data$ISLAND[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$REGION[which(raw_data$SITE==unique(raw_data$SITE)[i])][1],raw_data$OBS_YEAR[which(raw_data$SITE==unique(raw_data$SITE)[i])][1]))
}
View(Biomass_for_Survey)
Biomass_for_Survey=Biomass_for_Survey[-1,]
Biomass_for_Survey$Total_Biomass <- as.numeric(Biomass_for_Survey$Total_Biomass)
View(MeanSite)
View(MeanSite)
AvgBiomassIslandYear=data.frame(Island=NA,Region=NA, Biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i] Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
AvgBiomassIslandYear=AvgBiomassIslandYear[-1,]
AvgBiomassIslandYear$TotalBiomass=as.numeric(AvgBiomassIslandYear$TotalBiomass)
AvgBiomassIslandYear$Biomass=as.numeric(AvgBiomassIslandYear$Biomass)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
AvgBiomassIslandYear=data.frame(Island=NA, Region=NA, Biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$TotalBiomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
AvgBiomassIslandYear=AvgBiomassIslandYear[-1,]
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$Total_Biomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i], (Biomass_for_Survey$Region)[i],mean(as.numeric(Biomass_for_Survey$Total_Biomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
Biomass_by_Island <- ggplot(Biomass_for_Survey,aes(x = Island, y = Total_Biomass)) + geom_boxplot ()
Biomass_by_Island
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data_1 <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
#We got this data from a member in our lab who stressed ot us the importance of not using observation types other than Instantaneous (I) and Noninstantaneous (N). Though this dataset should only be SPC (standardized point count) data, some tow surveys were included that could bias biomass estimates.
raw_data <- subset(raw_data_1, (raw_data_1$OBS_TYPE == "I"|raw_data_1$OBS_TYPE == "N"))
#subset the large dataframe to include only columns we will use for analysis
raw_data <- raw_data[ , ! names(raw_data) %in% c("DATAROWID", "REGION", "SITE", "DIVER", "REPLICATEID", "REP", "HABITAT_CODE", "CURRENT_STRENGTH", "VISIBILITY_M", "MIN_DEPTH_M", "COMPLEXITY", "SUBSTRATE_HEIGHT_0", "SUBSTRATE_HEIGHT_20", "SUBSTRATE_HEIGHT_50", "SUBSTRATE_HEIGHT_100", "SUBSTRATE_HEIGHT_150", "MAX_HEIGHT", "URCHIN_DACOR", "BORING_URCHIN_DACOR", "COMMON_FAMILY", "FAMILY", "CONSUMER_GROUP", "OBS_TYPE")]
#split dataframe so that each row becomes 2 rows, REEF_ZONE and DEPTH_BIN become variables rather than columns (untidying data)
data_long <- pivot_longer(data = raw_data,
cols = c("REEF_ZONE","DEPTH_BIN"))
#place 2 variables into columns side-by-side again to reduce length of dataframe (re-tidying data)
data_wide <- pivot_wider(data = data_long)
#reduce the number of sig figs on Latitude to match number of sig figs on Longitude
raw_data[, 'LATITUDE'] = round(raw_data['LATITUDE'], 4)
#The following code creates new dataframes of just the columns we are interested in analyzing. The first includes only data from instantaneous (I) and noninstantaneous (N) observations
wd <- subset(raw_data_1, (raw_data_1$OBS_TYPE =="I"|raw_data_1$OBS_TYPE =="N"))
#and we only want to look at surveys from habitats with less than 50% sand
wd<-subset(wd, wd$SAND < 50.01)
#if we want to look at areas with high coral cover only
high_cc <- subset(wd, wd$HARD_CORAL > 49.99)
#lastly, we want to focus on surveys that took place in less than 18 m
wd<-subset(wd, wd$DEPTH_M < 18.01)
###########
#For the first section of this project we will focus on species richness
#A lot of the columns were not useful for us here, we made one data frame for Species Richness (using lapply)
Richness_by_Depth_and_Year <- data.frame( Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
Richness_by_Depth_and_Year <- data.frame( Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(raw_data)
Richness_by_Depth_and_Year <- data.frame( Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
View(raw_data_1)
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data_1 <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
#We got this data from a member in our lab who stressed ot us the importance of not using observation types other than Instantaneous (I) and Noninstantaneous (N). Though this dataset should only be SPC (standardized point count) data, some tow surveys were included that could bias biomass estimates.
raw_data <- subset(raw_data_1, (raw_data_1$OBS_TYPE == "I"|raw_data_1$OBS_TYPE == "N"))
#subset the large dataframe to include only columns we will use for analysis
raw_data <- raw_data[ , ! names(raw_data) %in% c("DATAROWID", "REGION", "SITE", "DIVER", "REPLICATEID", "REP", "HABITAT_CODE", "CURRENT_STRENGTH", "VISIBILITY_M", "MIN_DEPTH_M", "COMPLEXITY", "SUBSTRATE_HEIGHT_0", "SUBSTRATE_HEIGHT_20", "SUBSTRATE_HEIGHT_50", "SUBSTRATE_HEIGHT_100", "SUBSTRATE_HEIGHT_150", "MAX_HEIGHT", "URCHIN_DACOR", "BORING_URCHIN_DACOR", "COMMON_FAMILY", "FAMILY", "CONSUMER_GROUP", "OBS_TYPE")]
#split dataframe so that each row becomes 2 rows, REEF_ZONE and DEPTH_BIN become variables rather than columns (untidying data)
data_long <- pivot_longer(data = raw_data,
cols = c("REEF_ZONE","DEPTH_BIN"))
#place 2 variables into columns side-by-side again to reduce length of dataframe (re-tidying data)
data_wide <- pivot_wider(data = data_long)
#reduce the number of sig figs on Latitude to match number of sig figs on Longitude
raw_data[, 'LATITUDE'] = round(raw_data['LATITUDE'], 4)
#The following code creates new dataframes of just the columns we are interested in analyzing. The first includes only data from instantaneous (I) and noninstantaneous (N) observations
wd <- subset(raw_data_1, (raw_data_1$OBS_TYPE =="I"|raw_data_1$OBS_TYPE =="N"))
#and we only want to look at surveys from habitats with less than 50% sand
wd<-subset(wd, wd$SAND < 50.01)
#if we want to look at areas with high coral cover only
high_cc <- subset(wd, wd$HARD_CORAL > 49.99)
#lastly, we want to focus on surveys that took place in less than 18 m
wd<-subset(wd, wd$DEPTH_M < 18.01)
Richness_by_Depth_and_Year <- data.frame( Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data_1 <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
#We got this data from a member in our lab who stressed ot us the importance of not using observation types other than Instantaneous (I) and Noninstantaneous (N). Though this dataset should only be SPC (standardized point count) data, some tow surveys were included that could bias biomass estimates.
raw_data <- subset(raw_data_1, (raw_data_1$OBS_TYPE == "I"|raw_data_1$OBS_TYPE == "N"))
###########
#For the first section of this project we will focus on species richness
#A lot of the columns were not useful for us here, we made one data frame for Species Richness (using lapply)
Richness_by_Depth_and_Year <- data.frame( Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
#Drop NAs from depth column, this will remove entire row if depth is an NA, save as new dataframe
Richness_by_Depth_and_Year_no_NA <- Richness_by_Depth_and_Year %>%
drop_na(Depth)
###We also manually replaced the Island name for Pearl & Hermes and French Frigate shoals so they are called the universal "PHR" and "FFS" across datasheets to make the columns easier to read.
wd <- within(wd, ISLAND[ISLAND == "Pearl & Hermes"] <- "PHR")
raw_data <- raw_data[ , ! names(raw_data) %in% c("DATAROWID", "REGION", "SITE", "DIVER", "REPLICATEID", "REP", "HABITAT_CODE", "CURRENT_STRENGTH", "VISIBILITY_M", "MIN_DEPTH_M", "COMPLEXITY", "SUBSTRATE_HEIGHT_0", "SUBSTRATE_HEIGHT_20", "SUBSTRATE_HEIGHT_50", "SUBSTRATE_HEIGHT_100", "SUBSTRATE_HEIGHT_150", "MAX_HEIGHT", "URCHIN_DACOR", "BORING_URCHIN_DACOR", "COMMON_FAMILY", "FAMILY", "CONSUMER_GROUP", "OBS_TYPE")]
View(raw_data)
knitr::opts_chunk$set(echo = TRUE)
#add libraries
library(gdata)
library(reshape)
library(tidyverse)
library(ggplot2)
#add data
raw_data_1 <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
#We got this data from a member in our lab who stressed ot us the importance of not using observation types other than Instantaneous (I) and Noninstantaneous (N). Though this dataset should only be SPC (standardized point count) data, some tow surveys were included that could bias biomass estimates.
raw_data <- subset(raw_data_1, (raw_data_1$OBS_TYPE == "I"|raw_data_1$OBS_TYPE == "N"))
#subset the large dataframe to include only columns we will use for analysis
#raw_data <- raw_data[ , ! names(raw_data) %in% c("DATAROWID", "REGION", "SITE", "DIVER", "REPLICATEID", "REP", "HABITAT_CODE", "CURRENT_STRENGTH", "VISIBILITY_M", "MIN_DEPTH_M", "COMPLEXITY", "SUBSTRATE_HEIGHT_0", "SUBSTRATE_HEIGHT_20", "SUBSTRATE_HEIGHT_50", "SUBSTRATE_HEIGHT_100", "SUBSTRATE_HEIGHT_150", "MAX_HEIGHT", "URCHIN_DACOR", "BORING_URCHIN_DACOR", "COMMON_FAMILY", "FAMILY", "CONSUMER_GROUP", "OBS_TYPE")]
#split dataframe so that each row becomes 2 rows, REEF_ZONE and DEPTH_BIN become variables rather than columns (untidying data)
data_long <- pivot_longer(data = raw_data,
cols = c("REEF_ZONE","DEPTH_BIN"))
#place 2 variables into columns side-by-side again to reduce length of dataframe (re-tidying data)
data_wide <- pivot_wider(data = data_long)
#reduce the number of sig figs on Latitude to match number of sig figs on Longitude
raw_data[, 'LATITUDE'] = round(raw_data['LATITUDE'], 4)
#The following code creates new dataframes of just the columns we are interested in analyzing. The first includes only data from instantaneous (I) and noninstantaneous (N) observations
wd <- subset(raw_data_1, (raw_data_1$OBS_TYPE =="I"|raw_data_1$OBS_TYPE =="N"))
#and we only want to look at surveys from habitats with less than 50% sand
wd<-subset(wd, wd$SAND < 50.01)
#if we want to look at areas with high coral cover only
high_cc <- subset(wd, wd$HARD_CORAL > 49.99)
#lastly, we want to focus on surveys that took place in less than 18 m
wd<-subset(wd, wd$DEPTH_M < 18.01)
###########
#For the first section of this project we will focus on species richness
#A lot of the columns were not useful for us here, we made one data frame for Species Richness (using lapply)
Richness_by_Depth_and_Year <- data.frame( Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Island=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$ISLAND[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Depth=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$MAX_DEPTH_M[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Year=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$OBS_YEAR[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Region=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){raw_data$REGION[which(raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x])[1]]})), Species_Richness=unlist(lapply(c(1:length(unique(raw_data$SITEVISITID))),function(x){length(unique(raw_data$SPECIES[raw_data$SITEVISITID==unique(raw_data$SITEVISITID)[x]]))})))
#Drop NAs from depth column, this will remove entire row if depth is an NA, save as new dataframe
Richness_by_Depth_and_Year_no_NA <- Richness_by_Depth_and_Year %>%
drop_na(Depth)
###We also manually replaced the Island name for Pearl & Hermes and French Frigate shoals so they are called the universal "PHR" and "FFS" across datasheets to make the columns easier to read.
wd <- within(wd, ISLAND[ISLAND == "Pearl & Hermes"] <- "PHR")
wd <- within(wd, ISLAND[ISLAND == "French Frigate"] <- "FFS")
#######
raw_data <- raw_data[ , ! names(raw_data) %in% c("DATAROWID", "REGION", "SITE", "DIVER", "REPLICATEID", "REP", "HABITAT_CODE", "CURRENT_STRENGTH", "VISIBILITY_M", "MIN_DEPTH_M", "COMPLEXITY", "SUBSTRATE_HEIGHT_0", "SUBSTRATE_HEIGHT_20", "SUBSTRATE_HEIGHT_50", "SUBSTRATE_HEIGHT_100", "SUBSTRATE_HEIGHT_150", "MAX_HEIGHT", "URCHIN_DACOR", "BORING_URCHIN_DACOR", "COMMON_FAMILY", "FAMILY", "CONSUMER_GROUP", "OBS_TYPE")]
high_cc_plot <- ggplot(data = high_cc) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
high_cc_plot
Richness_by_Island <- ggplot(Richness_by_Depth_and_Year_no_NA, aes(x = Island, y = Species_Richness)) + geom_boxplot ()
Richness_by_Island
Richness_by_Region <- ggplot(Richness_by_Depth_and_Year_no_NA, aes(x = Region, y = Species_Richness)) + geom_boxplot ()
Richness_by_Region
Richness_by_Depth <- ggplot(Richness_by_Depth_and_Year_no_NA, aes(x=Depth, y =Species_Richness, color = Region)) + geom_point ()
Richness_by_Depth
Richness_over_time <- ggplot(Richness_by_Depth_and_Year, aes(x=Year, y =Species_Richness, group=Year)) + geom_boxplot()
Richness_over_time
raw_data <- read.csv("https://raw.githubusercontent.com/CallieStephenson/CS-MBIO-612/main/Final_Proj_CS_JG/HI_ONLY_NOAA_PACIFIC_RAMP_FISH_SPC_2010_2017_SCI_DATA_MBIO612.csv")
#We got this data from a member in our lab who stressed ot us the importance of not using observation types other than Instantaneous (I) and Noninstantaneous (N). Though this dataset should only be SPC (standardized point count) data, some tow surveys were included that could bias biomass estimates.
raw_data <- subset(raw_data_1, (raw_data_1$OBS_TYPE =="I"|raw_data_1$OBS_TYPE =="N"))
#Now getting rid of data without depth measurements
raw_data <- raw_data %>%
drop_na(DEPTH_M)
### Other issues that may arise using this type of data is having two variables in the same column. The NOAA dataset had both genus and species in the same column. If we wanted those in separate columns we would use the code below:
gen_sp <- new_data %>% separate(TAXONNAME, c('GENUS', 'SP'))
raw_data$BiomassPerFish = raw_data$LW_A*((raw_data$SIZE_TL_CM*raw_data$LENGTH_CONVERSION_FACTOR)^raw_data$LW_B)
raw_data$BiomassPerObs = raw_data$BiomassPerFish*raw_data$COUNT
#
Biomass_for_Survey = data.frame(Site = NA, Total_Biomass = NA, Island = NA, Region = NA, Year = NA, Depth = NA)
for(i in 1:length(unique(raw_data$SITE))){
Biomass_for_Survey = rbind(Biomass_for_Survey, c(unique(raw_data$SITE)[i],  sum(raw_data$BiomassPerObs[which(raw_data$SITE == unique(raw_data$SITE)[i])]), raw_data$ISLAND[which(raw_data$SITE == unique(raw_data$SITE)[i])][1], raw_data$REGION[which(raw_data$SITE == unique(raw_data$SITE)[i])][1], raw_data$OBS_YEAR[which(raw_data$SITE == unique(raw_data$SITE)[i])][1], raw_data$DEPTH_M[which(raw_data$SITE == unique(raw_data$SITE)[i])][1]))
}
Biomass_for_Survey = Biomass_for_Survey[-1, ]
Biomass_for_Survey$Total_Biomass <- as.numeric(Biomass_for_Survey$Total_Biomass)
View(raw_data)
Sharks=c("Carcharhinus amblyrhynchos","Carcharhinus galapagensis","Carcharhinus melanopterus","Triaenodon obesus","Sphyrna lewini")
SharkDF <- wd[which(wd$TAXONNAME %in% Sharks), ]
Shark_Biomass_per_Survey <- data.frame(Site = NA, Total_Biomass = NA, Island = NA, Region = NA, Year = NA, Depth = NA, Richness = NA)
for(i in 1:length(unique(SharkDF$SITE))){
Shark_Biomass_per_Survey = rbind(Shark_Biomass_per_Survey, c(unique(SharkDF$SITE)[i], sum(SharkDF$BiomassPerObs[which(SharkDF$SITE == unique(SharkDF$SITE)[i])]), SharkDF$ISLAND[which(SharkDF$SITE == unique(SharkDF$SITE)[i])][1], SharkDF$REGION[which(SharkDF$SITE == unique(SharkDF$SITE)[i])][1], SharkDF$OBS_YEAR[which(SharkDF$SITE == unique(SharkDF$SITE)[i])][1], SharkDF$DEPTH_M[which(SharkDF$SITE == unique(SharkDF$SITE)[i])][1],  length(unique((SharkDF$SPECIES[which(SharkDF$SITE == unique(SharkDF$SITE)[i])])))))
}
Shark_Biomass_per_Survey = Shark_Biomass_per_Survey[-1, ]
Shark_Biomass_per_Survey$Total_Biomass <- as.numeric(Shark_Biomass_per_Survey$Total_Biomass)
high_cc_plot1 <- ggplot(data = high_cc) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
high_cc_plot1
Richness_by_Island <- ggplot(Richness_by_Island_and_Year, aes(x = Island, y = Species_Richness)) + geom_boxplot ()
Richness_by_Island <- ggplot(Richness_by_Depth_and_Year, aes(x = Island, y = Species_Richness)) + geom_boxplot ()
Richness_by_Island
Richness_by_Depth <- ggplot(Richness_by_Depth_and_Year, aes(x = Depth, y  = Species_Richness, color = Region)) + geom_point ()
Richness_by_Depth
Biomass_by_Island <- ggplot(Biomass_for_Survey,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(. ~ Region, scales = "free")
Biomass_by_Island
Biomass_by_Island_manually_changed_y <- ggplot(Biomass_for_Survey,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(. ~ Region, scales = "free") + coord_cartesian(ylim = c(0, 400000))
Biomass_by_Island_manually_changed_y
MHI_Biomass <- subset(Biomass_for_Survey, (Biomass_for_Survey$Region == "MHI"))
MHI_Biomass_plot <- ggplot(MHI_Biomass,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x = element_text(angle = 90, hjust = 1))
MHI_Biomass_plot
MHI_Biomass_Year <- ggplot(MHI_Biomass,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x = element_text(angle = 90, hjust = 1))+ facet_grid(. ~ Year, scales = "free")
MHI_Biomass_Year
Sharks_plot <- ggplot(SharkDF, aes(x = ISLAND, y = COUNT, fill = REGION)) + geom_col() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(. ~ REGION, scales = "free")
Sharks_plot
Biomass_by_Island <- ggplot(Biomass_for_Survey,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x=element_text(angle=90,hjust=1))+ facet_grid(. ~ Region, scales = "free")
Biomass_by_Island
Sharks <- ggplot(SharkDF, aes(x=ISLAND, y=COUNT, fill = REGION))+geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1))+ facet_grid(. ~ REGION, scales="free")
Sharks
reef_zone <- data.frame(wd$REEF_ZONE, wd$SPECIES, wd$TAXONNAME, wd$COUNT)
reef_zone_sharks <- reef_zone[reef_zone$wd.TAXONNAME %in% c('Carcharhinus amblyrhynchos', 'Carcharhinus galapagensis', 'Carcharhinus melanopterus','Triaenodon obesus','Sphyrna lewini'),]
ggplot(data = reef_zone_sharks, aes(fill = wd.TAXONNAME, y = wd.COUNT, x = wd.REEF_ZONE)) +
geom_bar(position = 'dodge', stat = 'identity') +
ggtitle('Shark Species Frequency By Reef Location') +
xlab('Reef Zone') +
ylab('Frequency')
depth_df <- data.frame(data_depth$MAX_DEPTH_M, data_depth$TAXONNAME, data_depth$SIZE_TL_CM)
outliers <- boxplot.stats(Biomass_for_Survey$Total_Biomass)$out
outliers_in_data <- which(Biomass_for_Survey$Total_Biomass %in% c(outliers))
#since there are 182 outliers in the 1898 surveys, that's about 1% of the surveys (is this just how outliers works??). We can see the outlier data here:
head(Biomass_for_Survey[outliers_in_data,])
#Average biomasss for each island is something that is common to look at a quick snapshot of trends in biomass over time.
AvgBiomassIslandYear=data.frame(island=NA,biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey$Island))){
AvgBiomassIslandYear=rbind(AvgBiomassIslandYear,c(unique(Biomass_for_Survey$Island)[i],mean(as.numeric(Biomass_for_Survey$Total_Biomass[Biomass_for_Survey$Island==unique(Biomass_for_Survey$Island)[i]]))))
}
AvgBiomassIslandYear=AvgBiomassIslandYear[-1,]
AvgBiomassIslandYear$biomass=as.numeric(AvgBiomassIslandYear$biomass)
MHIsharks <- subset(Sharks, Sharks$REGION == "MHI")
NWHIsharks <- subset(Sharks, Sharks$REGION == "NWHI")
#Then, we run a t-test to compare the mean number of sharks seen per dive in each region.
t.test(MHIsharks$COUNT, NWHIsharks$COUNT, var.equal = FALSE)
high_cc_plot1 <- ggplot(data = high_cc) +
geom_point(mapping = aes(x = DEPTH_M, y = HARD_CORAL, color = REGION))
high_cc_plot1
####################
# A quick boxblot of species richness by island
Richness_by_Island <- ggplot(Richness_by_Island_and_Year, aes(x = Island, y = Species_Richness)) + geom_boxplot ()
Richness_by_Island <- ggplot(Richness_by_Depth_and_Year, aes(x = Island, y = Species_Richness)) + geom_boxplot ()
Richness_by_Island
# A quick point of species richness by island
Richness_by_Depth <- ggplot(Richness_by_Depth_and_Year, aes(x = Depth, y  = Species_Richness, color = Region)) + geom_point ()
Richness_by_Depth
Biomass_by_Island <- ggplot(Biomass_for_Survey,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(. ~ Region, scales = "free")
Biomass_by_Island
NWHI_Biomass_plot_year <- ggplot(NWHI_Biomass,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(. ~ Year, scales = "free")
NWHI_Biomass <- subset(Biomass_for_Survey, (Biomass_for_Survey$Region == "NWHI"))
NWHI_Biomass_plot <- ggplot(NWHI_Biomass,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x = element_text(angle = 90, hjust = 1))
NWHI_Biomass_plot
NWHI_Biomass_plot_year <- ggplot(NWHI_Biomass,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + facet_grid(. ~ Year, scales = "free")
NWHI_Biomass_plot_year
Biomass_for_Survey_no_outliers <- Biomass_for_Survey[-which(Biomass_for_Survey$Total_Biomass %in% c(outliers)),]
#which makes the same boxplot from earlier look like this:
Biomass_by_Island_no_out <- ggplot(Biomass_for_Survey_no_outliers,aes(x = Island, y = Total_Biomass)) + geom_boxplot () + theme(axis.text.x=element_text(angle=90,hjust=1))+ facet_grid(. ~ Region, scales = "free")
Biomass_by_Island_no_out
lm_model_biomass <- lm (Total_Biomass~Year + Depth, data = Biomass_for_Survey)
summary(lm_model_biomass)
Biomass_for_Survey_2010 <- subset(Biomass_for_Survey, (Biomass_for_Survey$Year == "2010"))
Biomass_for_Survey_2011 <- subset(Biomass_for_Survey, (Biomass_for_Survey$Year == "2011"))
Biomass_for_Survey_2012 <- subset(Biomass_for_Survey, (Biomass_for_Survey$Year == "2012"))
Biomass_for_Survey_2013 <- subset(Biomass_for_Survey, (Biomass_for_Survey$Year == "2013"))
Biomass_for_Survey_2014 <- subset(Biomass_for_Survey, (Biomass_for_Survey$Year == "2014"))
Biomass_for_Survey_2015 <- subset(Biomass_for_Survey, (Biomass_for_Survey$Year == "2015"))
AvgBiomassIslandYear_2010=data.frame(island=NA,biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey_2010$Island))){
AvgBiomassIslandYear_2010=rbind(AvgBiomassIslandYear,c( unique(Biomass_for_Survey_2010$Island)[i], mean(as.numeric(Biomass_for_Survey_2010$Total_Biomass[Biomass_for_Survey_2010$Island==unique(Biomass_for_Survey_2010$Island)[i]]))))
}
AvgBiomassIslandYear_2010=AvgBiomassIslandYear_2010[-1,]
AvgBiomassIslandYear_2010$biomass=as.numeric(AvgBiomassIslandYear_2010$biomass)
AvgBiomassIslandYear_2010$Year <- '2010'
#2011
AvgBiomassIslandYear_2011=data.frame(island=NA,biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey_2011$Island))){
AvgBiomassIslandYear_2011=rbind(AvgBiomassIslandYear,c( unique(Biomass_for_Survey_2011$Island)[i], mean(as.numeric(Biomass_for_Survey_2011$Total_Biomass[Biomass_for_Survey_2011$Island==unique(Biomass_for_Survey_2011$Island)[i]]))))
}
AvgBiomassIslandYear_2011=AvgBiomassIslandYear_2011[-1,]
AvgBiomassIslandYear_2011$biomass=as.numeric(AvgBiomassIslandYear_2011$biomass)
AvgBiomassIslandYear_2011$Year <- '2011'
#2012
AvgBiomassIslandYear_2012=data.frame(island=NA,biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey_2012$Island))){
AvgBiomassIslandYear_2012=rbind(AvgBiomassIslandYear,c( unique(Biomass_for_Survey_2012$Island)[i], mean(as.numeric(Biomass_for_Survey_2012$Total_Biomass[Biomass_for_Survey_2012$Island==unique(Biomass_for_Survey_2012$Island)[i]]))))
}
AvgBiomassIslandYear_2012=AvgBiomassIslandYear_2012[-1,]
AvgBiomassIslandYear_2012$biomass=as.numeric(AvgBiomassIslandYear_2012$biomass)
AvgBiomassIslandYear_2012$Year <- '2012'
#2013
AvgBiomassIslandYear_2013=data.frame(island=NA,biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey_2013$Island))){
AvgBiomassIslandYear_2013=rbind(AvgBiomassIslandYear,c( unique(Biomass_for_Survey_2013$Island)[i], mean(as.numeric(Biomass_for_Survey_2013$Total_Biomass[Biomass_for_Survey_2013$Island==unique(Biomass_for_Survey_2013$Island)[i]]))))
}
AvgBiomassIslandYear_2013=AvgBiomassIslandYear_2013[-1,]
AvgBiomassIslandYear_2013$biomass=as.numeric(AvgBiomassIslandYear_2013$biomass)
AvgBiomassIslandYear_2013$Year <- '2013'
#2014
AvgBiomassIslandYear_2014=data.frame(island=NA,biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey_2014$Island))){
AvgBiomassIslandYear_2014=rbind(AvgBiomassIslandYear,c( unique(Biomass_for_Survey_2014$Island)[i], mean(as.numeric(Biomass_for_Survey_2014$Total_Biomass[Biomass_for_Survey_2014$Island==unique(Biomass_for_Survey_2014$Island)[i]]))))
}
AvgBiomassIslandYear_2014=AvgBiomassIslandYear_2014[-1,]
AvgBiomassIslandYear_2014$biomass=as.numeric(AvgBiomassIslandYear_2014$biomass)
AvgBiomassIslandYear_2014$Year <- '2014'
#2015
AvgBiomassIslandYear_2015=data.frame(island=NA,biomass=NA)
rm(i)
for(i in 1:length(unique(Biomass_for_Survey_2015$Island))){
AvgBiomassIslandYear_2015=rbind(AvgBiomassIslandYear,c( unique(Biomass_for_Survey_2015$Island)[i], mean(as.numeric(Biomass_for_Survey_2015$Total_Biomass[Biomass_for_Survey_2015$Island==unique(Biomass_for_Survey_2015$Island)[i]]))))
}
AvgBiomassIslandYear_2015=AvgBiomassIslandYear_2015[-1,]
AvgBiomassIslandYear_2015$biomass=as.numeric(AvgBiomassIslandYear_2015$biomass)
AvgBiomassIslandYear_2015$Year <- '2015'
##PUT HER TOGETHER:
AvgBiomassIslandYear <- rbind(AvgBiomassIslandYear_2010, AvgBiomassIslandYear_2011, AvgBiomassIslandYear_2012, AvgBiomassIslandYear_2013, AvgBiomassIslandYear_2014, AvgBiomassIslandYear_2015)
#Visualize her:
AvgBiomassIslandYear_bar <-ggplot(data = AvgBiomassIslandYear) +
geom_col(mapping = aes(x = Year, y = biomass, fill = island))
AvgBiomassIslandYear_bar
lm_model_avg_biomass <- lm (biomass~Year, data = AvgBiomassIslandYear)
summary(lm_model_avg_biomass)
